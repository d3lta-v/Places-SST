//
//  PlacesKit.m
//  Places@SST
//
//  Created by Pan Ziyue on 26/5/15.
//  Copyright (c) 2015 StatiX Industries. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "PlacesKit.h"


@implementation PlacesKit

#pragma mark Cache

static UIImage* _imageOfHalf_iPad = nil;
static UIImage* _imageOfFull = nil;
static UIImage* _imageOfHalf = nil;
static UIImage* _imageOfLow_iPad = nil;
static UIImage* _imageOfNone_iPad = nil;
static UIImage* _imageOfNone = nil;
static UIImage* _imageOfLow = nil;
static UIImage* _imageOfFull_iPad = nil;
static UIImage* _imageOfCalendar_Icon = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawHalf_iPad;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 75, 300, 300)];
    [inner setStroke];
    oval2Path.lineWidth = 30;
    [oval2Path stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 45, 360, 360)];
    [middle setStroke];
    oval3Path.lineWidth = 30;
    [oval3Path stroke];
}

+ (void)drawFull;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* outer = [UIColor colorWithRed: 0 green: 0.294 blue: 0.486 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(10, 10, 280, 280)];
    [outer setStroke];
    ovalPath.lineWidth = 20;
    [ovalPath stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(30, 30, 240, 240)];
    [middle setStroke];
    oval3Path.lineWidth = 20;
    [oval3Path stroke];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 50, 200, 200)];
    [inner setStroke];
    oval2Path.lineWidth = 20;
    [oval2Path stroke];


    //// Oval 4 Drawing
    UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [oval4Path fill];
}

+ (void)drawHalf;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 50, 200, 200)];
    [inner setStroke];
    oval2Path.lineWidth = 20;
    [oval2Path stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(30, 30, 240, 240)];
    [middle setStroke];
    oval3Path.lineWidth = 20;
    [oval3Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawLow_iPad;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 75, 300, 300)];
    [inner setStroke];
    oval2Path.lineWidth = 30;
    [oval2Path stroke];
}

+ (void)drawNone_iPad;
{
    //// Color Declarations
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawNone;
{
    //// Color Declarations
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawLow;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 50, 200, 200)];
    [inner setStroke];
    oval2Path.lineWidth = 20;
    [oval2Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawFull_iPad;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* outer = [UIColor colorWithRed: 0 green: 0.294 blue: 0.486 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 75, 300, 300)];
    [inner setStroke];
    oval2Path.lineWidth = 30;
    [oval2Path stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 45, 360, 360)];
    [middle setStroke];
    oval3Path.lineWidth = 30;
    [oval3Path stroke];


    //// Oval 4 Drawing
    UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15, 15, 420, 420)];
    [outer setStroke];
    oval4Path.lineWidth = 30;
    [oval4Path stroke];
}

+ (void)drawCalendar_Icon;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// calendar-4-icon Drawing
    UIBezierPath* calendar4iconPath = UIBezierPath.bezierPath;
    [calendar4iconPath moveToPoint: CGPointMake(252.94, 46.71)];
    [calendar4iconPath addCurveToPoint: CGPointMake(239.7, 59.99) controlPoint1: CGPointMake(252.94, 54.04) controlPoint2: CGPointMake(247.01, 59.99)];
    [calendar4iconPath addCurveToPoint: CGPointMake(226.47, 46.71) controlPoint1: CGPointMake(232.39, 59.99) controlPoint2: CGPointMake(226.47, 54.04)];
    [calendar4iconPath addLineToPoint: CGPointMake(226.47, 13.28)];
    [calendar4iconPath addCurveToPoint: CGPointMake(239.7, 0) controlPoint1: CGPointMake(226.47, 5.95) controlPoint2: CGPointMake(232.39, 0)];
    [calendar4iconPath addCurveToPoint: CGPointMake(252.94, 13.28) controlPoint1: CGPointMake(247.01, 0) controlPoint2: CGPointMake(252.94, 5.95)];
    [calendar4iconPath addLineToPoint: CGPointMake(252.94, 46.71)];
    [calendar4iconPath closePath];
    [calendar4iconPath moveToPoint: CGPointMake(74.11, 13.22)];
    [calendar4iconPath addCurveToPoint: CGPointMake(60.88, -0.06) controlPoint1: CGPointMake(74.11, 5.89) controlPoint2: CGPointMake(68.19, -0.06)];
    [calendar4iconPath addCurveToPoint: CGPointMake(47.64, 13.22) controlPoint1: CGPointMake(53.57, -0.06) controlPoint2: CGPointMake(47.64, 5.89)];
    [calendar4iconPath addLineToPoint: CGPointMake(47.64, 46.64)];
    [calendar4iconPath addCurveToPoint: CGPointMake(60.88, 59.93) controlPoint1: CGPointMake(47.64, 53.98) controlPoint2: CGPointMake(53.57, 59.93)];
    [calendar4iconPath addCurveToPoint: CGPointMake(74.11, 46.64) controlPoint1: CGPointMake(68.19, 59.93) controlPoint2: CGPointMake(74.11, 53.98)];
    [calendar4iconPath addLineToPoint: CGPointMake(74.11, 13.22)];
    [calendar4iconPath closePath];
    [calendar4iconPath moveToPoint: CGPointMake(268.93, 32.61)];
    [calendar4iconPath addLineToPoint: CGPointMake(268.93, 46.22)];
    [calendar4iconPath addCurveToPoint: CGPointMake(239.7, 75.55) controlPoint1: CGPointMake(268.93, 62.39) controlPoint2: CGPointMake(255.82, 75.55)];
    [calendar4iconPath addCurveToPoint: CGPointMake(210.47, 46.22) controlPoint1: CGPointMake(223.58, 75.55) controlPoint2: CGPointMake(210.47, 62.39)];
    [calendar4iconPath addLineToPoint: CGPointMake(210.47, 32.61)];
    [calendar4iconPath addLineToPoint: CGPointMake(90.11, 32.61)];
    [calendar4iconPath addLineToPoint: CGPointMake(90.11, 46.16)];
    [calendar4iconPath addCurveToPoint: CGPointMake(60.88, 75.49) controlPoint1: CGPointMake(90.11, 62.33) controlPoint2: CGPointMake(77, 75.49)];
    [calendar4iconPath addCurveToPoint: CGPointMake(31.64, 46.16) controlPoint1: CGPointMake(44.76, 75.49) controlPoint2: CGPointMake(31.64, 62.33)];
    [calendar4iconPath addLineToPoint: CGPointMake(31.64, 32.61)];
    [calendar4iconPath addLineToPoint: CGPointMake(-0.11, 32.61)];
    [calendar4iconPath addLineToPoint: CGPointMake(-0.11, 295)];
    [calendar4iconPath addLineToPoint: CGPointMake(300, 295)];
    [calendar4iconPath addLineToPoint: CGPointMake(300, 32.61)];
    [calendar4iconPath addLineToPoint: CGPointMake(268.93, 32.61)];
    [calendar4iconPath closePath];
    [calendar4iconPath moveToPoint: CGPointMake(270.86, 265.76)];
    [calendar4iconPath addLineToPoint: CGPointMake(29.03, 265.76)];
    [calendar4iconPath addLineToPoint: CGPointMake(29.03, 103.17)];
    [calendar4iconPath addLineToPoint: CGPointMake(270.86, 103.17)];
    [calendar4iconPath addLineToPoint: CGPointMake(270.86, 265.76)];
    [calendar4iconPath closePath];
    [calendar4iconPath moveToPoint: CGPointMake(157.35, 205.34)];
    [calendar4iconPath addCurveToPoint: CGPointMake(142.5, 182.59) controlPoint1: CGPointMake(157.35, 194.57) controlPoint2: CGPointMake(151.75, 186.16)];
    [calendar4iconPath addCurveToPoint: CGPointMake(153.69, 162.41) controlPoint1: CGPointMake(149.58, 179.05) controlPoint2: CGPointMake(153.69, 171.76)];
    [calendar4iconPath addCurveToPoint: CGPointMake(119.16, 133.56) controlPoint1: CGPointMake(153.69, 144.35) controlPoint2: CGPointMake(136.13, 133.56)];
    [calendar4iconPath addCurveToPoint: CGPointMake(83.59, 170.65) controlPoint1: CGPointMake(99.41, 133.56) controlPoint2: CGPointMake(84.49, 145.97)];
    [calendar4iconPath addLineToPoint: CGPointMake(105.59, 170.65)];
    [calendar4iconPath addCurveToPoint: CGPointMake(119.3, 153) controlPoint1: CGPointMake(105.4, 160.44) controlPoint2: CGPointMake(109.22, 153)];
    [calendar4iconPath addCurveToPoint: CGPointMake(131.78, 164.67) controlPoint1: CGPointMake(125.31, 153) controlPoint2: CGPointMake(131.78, 156.65)];
    [calendar4iconPath addCurveToPoint: CGPointMake(110.81, 175.36) controlPoint1: CGPointMake(131.78, 174.79) controlPoint2: CGPointMake(120.86, 176.24)];
    [calendar4iconPath addLineToPoint: CGPointMake(110.81, 192.54)];
    [calendar4iconPath addCurveToPoint: CGPointMake(133.61, 205.77) controlPoint1: CGPointMake(125.09, 192.54) controlPoint2: CGPointMake(133.61, 193.45)];
    [calendar4iconPath addCurveToPoint: CGPointMake(119.02, 219.84) controlPoint1: CGPointMake(133.61, 215.49) controlPoint2: CGPointMake(126.28, 219.84)];
    [calendar4iconPath addCurveToPoint: CGPointMake(103.12, 200.35) controlPoint1: CGPointMake(108.01, 219.84) controlPoint2: CGPointMake(103.51, 211.59)];
    [calendar4iconPath addLineToPoint: CGPointMake(81.28, 200.35)];
    [calendar4iconPath addCurveToPoint: CGPointMake(119.3, 239.14) controlPoint1: CGPointMake(80.86, 225.75) controlPoint2: CGPointMake(96.2, 239.14)];
    [calendar4iconPath addCurveToPoint: CGPointMake(157.35, 205.34) controlPoint1: CGPointMake(139.94, 239.14) controlPoint2: CGPointMake(157.35, 226.48)];
    [calendar4iconPath closePath];
    [calendar4iconPath moveToPoint: CGPointMake(215.05, 237.3)];
    [calendar4iconPath addLineToPoint: CGPointMake(215.05, 135.53)];
    [calendar4iconPath addLineToPoint: CGPointMake(196.44, 135.53)];
    [calendar4iconPath addCurveToPoint: CGPointMake(167.38, 155.12) controlPoint1: CGPointMake(194.13, 151.02) controlPoint2: CGPointMake(183.12, 155.55)];
    [calendar4iconPath addLineToPoint: CGPointMake(167.38, 173.19)];
    [calendar4iconPath addLineToPoint: CGPointMake(192.15, 173.19)];
    [calendar4iconPath addLineToPoint: CGPointMake(192.15, 237.3)];
    [calendar4iconPath addLineToPoint: CGPointMake(215.05, 237.3)];
    [calendar4iconPath closePath];
    calendar4iconPath.miterLimit = 4;

    [color setFill];
    [calendar4iconPath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfHalf_iPad;
{
    if (_imageOfHalf_iPad)
        return _imageOfHalf_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawHalf_iPad];
    _imageOfHalf_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfHalf_iPad;
}

+ (UIImage*)imageOfFull;
{
    if (_imageOfFull)
        return _imageOfFull;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawFull];
    _imageOfFull = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfFull;
}

+ (UIImage*)imageOfHalf;
{
    if (_imageOfHalf)
        return _imageOfHalf;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawHalf];
    _imageOfHalf = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfHalf;
}

+ (UIImage*)imageOfLow_iPad;
{
    if (_imageOfLow_iPad)
        return _imageOfLow_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawLow_iPad];
    _imageOfLow_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfLow_iPad;
}

+ (UIImage*)imageOfNone_iPad;
{
    if (_imageOfNone_iPad)
        return _imageOfNone_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawNone_iPad];
    _imageOfNone_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfNone_iPad;
}

+ (UIImage*)imageOfNone;
{
    if (_imageOfNone)
        return _imageOfNone;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawNone];
    _imageOfNone = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfNone;
}

+ (UIImage*)imageOfLow;
{
    if (_imageOfLow)
        return _imageOfLow;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawLow];
    _imageOfLow = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfLow;
}

+ (UIImage*)imageOfFull_iPad;
{
    if (_imageOfFull_iPad)
        return _imageOfFull_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawFull_iPad];
    _imageOfFull_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfFull_iPad;
}

+ (UIImage*)imageOfCalendar_Icon;
{
    if (_imageOfCalendar_Icon)
        return _imageOfCalendar_Icon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 295), NO, 0.0f);
    [PlacesKit drawCalendar_Icon];
    _imageOfCalendar_Icon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCalendar_Icon;
}

#pragma mark Customization Infrastructure

- (void)setHalf_iPadTargets: (NSArray*)half_iPadTargets
{
    _half_iPadTargets = half_iPadTargets;

    for (id target in self.half_iPadTargets)
        [target setImage: PlacesKit.imageOfHalf_iPad];
}

- (void)setFullTargets: (NSArray*)fullTargets
{
    _fullTargets = fullTargets;

    for (id target in self.fullTargets)
        [target setImage: PlacesKit.imageOfFull];
}

- (void)setHalfTargets: (NSArray*)halfTargets
{
    _halfTargets = halfTargets;

    for (id target in self.halfTargets)
        [target setImage: PlacesKit.imageOfHalf];
}

- (void)setLow_iPadTargets: (NSArray*)low_iPadTargets
{
    _low_iPadTargets = low_iPadTargets;

    for (id target in self.low_iPadTargets)
        [target setImage: PlacesKit.imageOfLow_iPad];
}

- (void)setNone_iPadTargets: (NSArray*)none_iPadTargets
{
    _none_iPadTargets = none_iPadTargets;

    for (id target in self.none_iPadTargets)
        [target setImage: PlacesKit.imageOfNone_iPad];
}

- (void)setNoneTargets: (NSArray*)noneTargets
{
    _noneTargets = noneTargets;

    for (id target in self.noneTargets)
        [target setImage: PlacesKit.imageOfNone];
}

- (void)setLowTargets: (NSArray*)lowTargets
{
    _lowTargets = lowTargets;

    for (id target in self.lowTargets)
        [target setImage: PlacesKit.imageOfLow];
}

- (void)setFull_iPadTargets: (NSArray*)full_iPadTargets
{
    _full_iPadTargets = full_iPadTargets;

    for (id target in self.full_iPadTargets)
        [target setImage: PlacesKit.imageOfFull_iPad];
}

- (void)setCalendar_IconTargets: (NSArray*)calendar_IconTargets
{
    _calendar_IconTargets = calendar_IconTargets;

    for (id target in self.calendar_IconTargets)
        [target setImage: PlacesKit.imageOfCalendar_Icon];
}


@end
