//
//  PlacesKit.m
//  Places@SST
//
//  Created by Pan Ziyue on 19/5/15.
//  Copyright (c) 2015 StatiX Industries. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "PlacesKit.h"


@implementation PlacesKit

#pragma mark Cache

static UIImage* _imageOfHalf_iPad = nil;
static UIImage* _imageOfFull = nil;
static UIImage* _imageOfHalf = nil;
static UIImage* _imageOfLow_iPad = nil;
static UIImage* _imageOfNone_iPad = nil;
static UIImage* _imageOfNone = nil;
static UIImage* _imageOfLow = nil;
static UIImage* _imageOfFull_iPad = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawHalf_iPad;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 75, 300, 300)];
    [inner setStroke];
    oval2Path.lineWidth = 30;
    [oval2Path stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 45, 360, 360)];
    [middle setStroke];
    oval3Path.lineWidth = 30;
    [oval3Path stroke];
}

+ (void)drawFull;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* outer = [UIColor colorWithRed: 0 green: 0.294 blue: 0.486 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(10, 10, 280, 280)];
    [outer setStroke];
    ovalPath.lineWidth = 20;
    [ovalPath stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(30, 30, 240, 240)];
    [middle setStroke];
    oval3Path.lineWidth = 20;
    [oval3Path stroke];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 50, 200, 200)];
    [inner setStroke];
    oval2Path.lineWidth = 20;
    [oval2Path stroke];


    //// Oval 4 Drawing
    UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [oval4Path fill];
}

+ (void)drawHalf;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 50, 200, 200)];
    [inner setStroke];
    oval2Path.lineWidth = 20;
    [oval2Path stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(30, 30, 240, 240)];
    [middle setStroke];
    oval3Path.lineWidth = 20;
    [oval3Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawLow_iPad;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 75, 300, 300)];
    [inner setStroke];
    oval2Path.lineWidth = 30;
    [oval2Path stroke];
}

+ (void)drawNone_iPad;
{
    //// Color Declarations
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawNone;
{
    //// Color Declarations
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawLow;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 50, 200, 200)];
    [inner setStroke];
    oval2Path.lineWidth = 20;
    [oval2Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 60, 180, 180)];
    [middleText setFill];
    [ovalPath fill];
}

+ (void)drawFull_iPad;
{
    //// Color Declarations
    UIColor* inner = [UIColor colorWithRed: 0.251 green: 0.643 blue: 0.906 alpha: 1];
    UIColor* middle = [UIColor colorWithRed: 0.141 green: 0.545 blue: 0.812 alpha: 1];
    UIColor* outer = [UIColor colorWithRed: 0 green: 0.294 blue: 0.486 alpha: 1];
    UIColor* middleText = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.4];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 90, 270, 270)];
    [middleText setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 75, 300, 300)];
    [inner setStroke];
    oval2Path.lineWidth = 30;
    [oval2Path stroke];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 45, 360, 360)];
    [middle setStroke];
    oval3Path.lineWidth = 30;
    [oval3Path stroke];


    //// Oval 4 Drawing
    UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15, 15, 420, 420)];
    [outer setStroke];
    oval4Path.lineWidth = 30;
    [oval4Path stroke];
}

#pragma mark Generated Images

+ (UIImage*)imageOfHalf_iPad;
{
    if (_imageOfHalf_iPad)
        return _imageOfHalf_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawHalf_iPad];
    _imageOfHalf_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfHalf_iPad;
}

+ (UIImage*)imageOfFull;
{
    if (_imageOfFull)
        return _imageOfFull;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawFull];
    _imageOfFull = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfFull;
}

+ (UIImage*)imageOfHalf;
{
    if (_imageOfHalf)
        return _imageOfHalf;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawHalf];
    _imageOfHalf = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfHalf;
}

+ (UIImage*)imageOfLow_iPad;
{
    if (_imageOfLow_iPad)
        return _imageOfLow_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawLow_iPad];
    _imageOfLow_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfLow_iPad;
}

+ (UIImage*)imageOfNone_iPad;
{
    if (_imageOfNone_iPad)
        return _imageOfNone_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawNone_iPad];
    _imageOfNone_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfNone_iPad;
}

+ (UIImage*)imageOfNone;
{
    if (_imageOfNone)
        return _imageOfNone;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawNone];
    _imageOfNone = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfNone;
}

+ (UIImage*)imageOfLow;
{
    if (_imageOfLow)
        return _imageOfLow;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 300), NO, 0.0f);
    [PlacesKit drawLow];
    _imageOfLow = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfLow;
}

+ (UIImage*)imageOfFull_iPad;
{
    if (_imageOfFull_iPad)
        return _imageOfFull_iPad;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(450, 450), NO, 0.0f);
    [PlacesKit drawFull_iPad];
    _imageOfFull_iPad = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfFull_iPad;
}

#pragma mark Customization Infrastructure

- (void)setHalf_iPadTargets: (NSArray*)half_iPadTargets
{
    _half_iPadTargets = half_iPadTargets;

    for (id target in self.half_iPadTargets)
        [target setImage: PlacesKit.imageOfHalf_iPad];
}

- (void)setFullTargets: (NSArray*)fullTargets
{
    _fullTargets = fullTargets;

    for (id target in self.fullTargets)
        [target setImage: PlacesKit.imageOfFull];
}

- (void)setHalfTargets: (NSArray*)halfTargets
{
    _halfTargets = halfTargets;

    for (id target in self.halfTargets)
        [target setImage: PlacesKit.imageOfHalf];
}

- (void)setLow_iPadTargets: (NSArray*)low_iPadTargets
{
    _low_iPadTargets = low_iPadTargets;

    for (id target in self.low_iPadTargets)
        [target setImage: PlacesKit.imageOfLow_iPad];
}

- (void)setNone_iPadTargets: (NSArray*)none_iPadTargets
{
    _none_iPadTargets = none_iPadTargets;

    for (id target in self.none_iPadTargets)
        [target setImage: PlacesKit.imageOfNone_iPad];
}

- (void)setNoneTargets: (NSArray*)noneTargets
{
    _noneTargets = noneTargets;

    for (id target in self.noneTargets)
        [target setImage: PlacesKit.imageOfNone];
}

- (void)setLowTargets: (NSArray*)lowTargets
{
    _lowTargets = lowTargets;

    for (id target in self.lowTargets)
        [target setImage: PlacesKit.imageOfLow];
}

- (void)setFull_iPadTargets: (NSArray*)full_iPadTargets
{
    _full_iPadTargets = full_iPadTargets;

    for (id target in self.full_iPadTargets)
        [target setImage: PlacesKit.imageOfFull_iPad];
}


@end
